/**
 * Adapted from code generated by AI
 * Cf. [prompt](./ai prompt and answer - how to test uniform distribution)
 * Chi-Square critical values for different significance levels
    const chiSquareCriticalValues = {
        0.1: 14.684,
        0.05: 16.919,
        0.01: 21.666,
        0.001: 27.877
    };
 * @param {} f 
 * @param {*} p 
 * @returns 
 */
export function check_generator(
  sampleSize,
  observedFrequencies,
  chiSquareCriticalValue
) {
  // Create a histogram of the generated numbers
  const numBins = 4;
  // const observedFrequencies = new Array(numBins).fill(0);
  // randomNumbers.forEach(num => {
  //     const binIndex = Math.floor(num * numBins);
  //     observedFrequencies[binIndex]++;
  // });

  // Calculate expected frequencies for a uniform distribution
  const expectedFrequencies = new Array(numBins).fill(sampleSize / numBins);

  // Calculate Chi-Square Statistic
  let chiSquareStat = 0;
  for (let i = 0; i < numBins; i++) {
    chiSquareStat +=
      Math.pow(observedFrequencies[i] - expectedFrequencies[i], 2) /
      expectedFrequencies[i];
  }

  // Calculate degrees of freedom
  const degreesOfFreedom = numBins - 1;
  // Determine if the Chi-Square statistic exceeds the critical value for the given p-value
  return chiSquareStat < chiSquareCriticalValue ? 1 : 0;
}

export function are_array_deep_equal(arr1, arr2){
  return arr1.join(",") === arr2.join(",");
}

export function transpose (array_of_arrays) {
  return array_of_arrays.map((row, i) =>
    row.map((_, j) => array_of_arrays[j][i])
  );
} 

/**
 * Returns the current state of the board. 0 represents an empty cell.
 * Any non-zero number represents the value of the cell.
 * @returns {Array<Array<number>>} 4x4 matrix representing the current state of the board
 */
export function get_board_state() {
  return [0, 1, 2, 3].map((i) =>
    Array.from(document.querySelectorAll(`[data-row="${i}"]`)).map(
      (x) => x.textContent | 0
    )
  );
}

export function get_best_score() {
  return document.querySelector("#best-score-amount").textContent | 0;
}

export function get_current_score() {
  return document.querySelector("#current-score-amount").textContent | 0;
}

// TODO: update after having set up the test fsm structure
export function get_game_status(){
  return "IN_PROGRESS"
}

export const empty_object = {};